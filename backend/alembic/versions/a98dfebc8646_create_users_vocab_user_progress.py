"""create users,vocab,user_progress

Revision ID: a98dfebc8646
Revises: 843a81f9f2cc
Create Date: 2025-09-10 00:50:47.538513

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a98dfebc8646'
down_revision: Union[str, Sequence[str], None] = '843a81f9f2cc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_progress', sa.Column('difficulty_level', sa.Integer(), nullable=True))
    op.add_column('user_progress', sa.Column('last_practiced', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('user_progress', sa.Column('success_rate', sa.Float(), nullable=True))
    op.alter_column('user_progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_progress', 'word_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('user_progress_user_id_word_id_key'), 'user_progress', type_='unique')
    op.create_index(op.f('ix_user_progress_id'), 'user_progress', ['id'], unique=False)
    op.drop_constraint(op.f('user_progress_word_id_fkey'), 'user_progress', type_='foreignkey')
    op.drop_constraint(op.f('user_progress_user_id_fkey'), 'user_progress', type_='foreignkey')
    op.create_foreign_key(None, 'user_progress', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user_progress', 'vocabulary', ['word_id'], ['id'])
    op.drop_column('user_progress', 'created_at')
    op.drop_column('user_progress', 'times_correct')
    op.drop_column('user_progress', 'next_review')
    op.drop_column('user_progress', 'times_seen')
    op.drop_column('user_progress', 'last_seen')
    op.drop_column('user_progress', 'updated_at')
    op.add_column('users', sa.Column('native_language', sa.String(length=20), nullable=True))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'hashed_password')
    op.add_column('vocabulary', sa.Column('english_word', sa.String(length=100), nullable=False))
    op.add_column('vocabulary', sa.Column('tamil_word', sa.String(length=100), nullable=True))
    op.add_column('vocabulary', sa.Column('pronunciation', sa.String(length=200), nullable=True))
    op.add_column('vocabulary', sa.Column('category', sa.String(length=50), nullable=True))
    op.create_index(op.f('ix_vocabulary_id'), 'vocabulary', ['id'], unique=False)
    op.drop_column('vocabulary', 'created_at')
    op.drop_column('vocabulary', 'english_translation')
    op.drop_column('vocabulary', 'part_of_speech')
    op.drop_column('vocabulary', 'updated_at')
    op.drop_column('vocabulary', 'difficulty_level')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vocabulary', sa.Column('difficulty_level', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('vocabulary', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('vocabulary', sa.Column('part_of_speech', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('vocabulary', sa.Column('english_translation', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('vocabulary', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_vocabulary_id'), table_name='vocabulary')
    op.drop_column('vocabulary', 'category')
    op.drop_column('vocabulary', 'pronunciation')
    op.drop_column('vocabulary', 'tamil_word')
    op.drop_column('vocabulary', 'english_word')
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'])
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'])
    op.drop_column('users', 'native_language')
    op.add_column('user_progress', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('user_progress', sa.Column('last_seen', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('user_progress', sa.Column('times_seen', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('user_progress', sa.Column('next_review', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('user_progress', sa.Column('times_correct', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('user_progress', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_progress', type_='foreignkey')
    op.drop_constraint(None, 'user_progress', type_='foreignkey')
    op.create_foreign_key(op.f('user_progress_user_id_fkey'), 'user_progress', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_progress_word_id_fkey'), 'user_progress', 'vocabulary', ['word_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_progress_id'), table_name='user_progress')
    op.create_unique_constraint(op.f('user_progress_user_id_word_id_key'), 'user_progress', ['user_id', 'word_id'])
    op.alter_column('user_progress', 'word_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('user_progress', 'success_rate')
    op.drop_column('user_progress', 'last_practiced')
    op.drop_column('user_progress', 'difficulty_level')
    # ### end Alembic commands ###
